version: "3"

services:
  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_DB: be-templateapp
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U root"]

  migration:
    image: rishabh75/be-templateapp
    container_name: migration
    env_file:
      - .env
    environment:
      - PORT=9069
      - POSTGRES_BILL_SPLIT_READ_WRITE=postgres://root:root@postgres:5432/be-templateapp
    depends_on:
      - postgres
    command: ["npm", "run", "migrate"]

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"

  internal-server:
    image: rishabh75/be-templateapp
    container_name: internal-server
    depends_on:
      - postgres
      - migration
      - redis
    ports:
      - "9069:9069"
    env_file:
      - .env
    environment:
      - MODE=server
      - SERVER_TYPE=internal
      - PORT=9069
      - POSTGRES_BILL_SPLIT_READ_WRITE=postgres://root:root@postgres:5432/be-templateapp
      - REDIS_HOST=redis
    command: ["node", "index.js"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9069/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  email-worker:
    image: rishabh75/be-worker
    depends_on:
      - internal-server
    links:
      - redis
    env_file:
      - .env
    environment:
      - MODE=worker
      - WORKER_TYPE=email
      - QUEUE_NAME=EMAIL_WORKER_QUEUE_1
      - WORKER_CONCURRENCY=5
      - POSTGRES_BILL_SPLIT_READ_WRITE=postgres://root:root@postgres:5432/be-templateapp
      - REDIS_HOST=redis
    command: ["node", "index.js"]
    scale: 5

  email-cron:
    image: rishabh75/be-cron
    container_name: email-cron
    depends_on:
      - internal-server
    env_file:
      - .env
    links:
      - redis
    environment:
      - MODE=cron
      - POSTGRES_BILL_SPLIT_READ_WRITE=postgres://root:root@postgres:5432/be-templateapp
      - REDIS_HOST=redis
    command: ["node", "index.js"]

volumes:
  postgres_data:
