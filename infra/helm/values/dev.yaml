COMPONENT_DEFINITION:
  - &AUTH-POSTGRES
    name: auth-postgres
    replicaCount: 1
    image:
      repository: postgres:14.10-alpine3.19
      tag: latest
    resources:
      requests:
        cpu: "1"
        memory: "500Mi"
      limits:
        cpu: "1"
        memory: "500Mi"
    service:
      name: "db"
      port: 5432
    env:
      POSTGRES_USER: "root"
      POSTGRES_PASSWORD: "root"
      POSTGRES_DB: "auth"
    volume:
      path: /var/lib/postgresql/data
      subPath: auth-postgres
      claimName: auth-postgres-pvc
  - &CORE-POSTGRES
    name: core-postgres
    replicaCount: 1
    image:
      repository: postgres:14.10-alpine3.19
      tag: latest
    resources:
      requests:
        cpu: "1"
        memory: "500Mi"
      limits:
        cpu: "1"
        memory: "500Mi"
    service:
      name: "db"
      port: 5432
    env:
      POSTGRES_USER: "root"
      POSTGRES_PASSWORD: "root"
      POSTGRES_DB: "core"
    volume:
      path: /var/lib/postgresql/data
      subPath: core-postgres
      claimName: core-postgres-pvc
  - &EMAIL-REDIS
    name: email-redis
    replicaCount: 1
    image:
      repository: redis
      tag: latest
    resources:
      requests:
        cpu: "1"
        memory: "500Mi"
      limits:
        cpu: "1"
        memory: "500Mi"
    service:
      name: "caching"
      port: 6379
  - &AUTH
    name: auth
    replicaCount: 1
    image:
      repository: rishabh75/orbitdeck-auth
      tag: latest
    resources:
      requests:
        cpu: "1"
        memory: "500Mi"
      limits:
        cpu: "1"
        memory: "500Mi"
    service:
      port: 9069
    env:
      SERVER_PORT: 9069
      MODE: server
  - &CORE
    name: core
    replicaCount: 1
    image:
      repository: rishabh75/orbitdeck-core
      tag: latest
    resources:
      requests:
        cpu: "1"
        memory: "500Mi"
      limits:
        cpu: "1"
        memory: "500Mi"
    service:
      port: 9069
    env:
      SERVER_PORT: 9069
      MODE: server
  - &EMAIL
    name: email
    replicaCount: 1
    image:
      repository: rishabh75/orbitdeck-email
      tag: latest
    resources:
      requests:
        cpu: "1"
        memory: "500Mi"
      limits:
        cpu: "1"
        memory: "500Mi"
    env:
      MODE: worker
      WORKER_TYPE: verify-email
      EMAIL_SENDER_NAME: Nikki Parker
      EMAIL_SENDER_ADDRESS: nikki96@ethereal.email
      EMAIL_SENDER_PASSWORD: vyPM1PtxuRee7MGZZe
  - &GENERATOR
    name: generate
    replicaCount: 1
    serviceAccount: true
    image:
      repository: rishabh75/orbitdeck-generate
      tag: latest
    resources:
      requests:
        cpu: "1"
        memory: "500Mi"
      limits:
        cpu: "1"
        memory: "500Mi"
    env:
      MODE: worker
      WORKER_TYPE: generate-helm
  - &UNINSTALLER
    name: uninstall
    replicaCount: 1
    image:
      repository: rishabh75/orbitdeck-uninstall
      tag: latest
    resources:
      requests:
        cpu: "1"
        memory: "500Mi"
      limits:
        cpu: "1"
        memory: "500Mi"
    env:
      MODE: worker
      WORKER_TYPE: uninstall-helm
  - &CLIENT
    name: client
    replicaCount: 1
    image:
      repository: rishabh75/orbitdeck-client
      tag: latest
    resources:
      requests:
        cpu: "1"
        memory: "1000Mi"
      limits:
        cpu: "1"
        memory: "1000Mi"
    service:
      port: 3000
    env:
      API_URL: "https://orbitdeck.app/api/user"
      ENV: "development"
      PORT: 3000

INGRESS_DEFINITION: &INGRESS_DEFINITION
  - &DEV_INGRESS
    ingressClassName: nginx
    annotations:
      nginx.ingress.kubernetes.io/use-regex: "true"
      nginx.ingress.kubernetes.io/rewrite-target: /$1
    rules:
      - host: orbitdeck.app
        paths:
          - path: /api/auth/?(.*)
            pathType: ImplementationSpecific
            backend:
              serviceName: auth-svc
              servicePort: 9069
          - path: /api/core/?(.*)
            pathType: ImplementationSpecific
            backend:
              serviceName: core-svc
              servicePort: 9069
          - path: /?(.*)
            pathType: ImplementationSpecific
            backend:
              serviceName: client-svc
              servicePort: 3000

# jobs:
#   - name: internal-migration
#     completions: 1
#     backoffLimit: 1
#     enabled: true
#     image:
#       repository: rishabh75/orbitdeck-internal-migration
#       tag: latest
#       pullPolicy: IfNotPresent
#     resources:
#       requests:
#         cpu: "1"
#         memory: "500Mi"
#       limits:
#         cpu: "1"
#         memory: "500Mi"
#     env:
#       MODE: "server"
#       SERVER_TYPE: "internal"

volumes:
  - name: auth-postgres
    storage: 500Mi
  - name: core-postgres
    storage: 500Mi

# cronJobs:
#   - name: email-cron-job
#     schedule: "*/30 * * * *"
#     successfulJobsHistoryLimit: 3
#     failedJobsHistoryLimit: 1
#     concurrencyPolicy: "Forbid"
#     image: rishabh75/orbitdeck-email-cron
#     resources:
#       requests:
#         cpu: "1"
#         memory: "500Mi"
#       limits:
#         cpu: "1"
#         memory: "500Mi"

DEV_COMPONENTS: &DEV_COMPONENTS
  - *AUTH-POSTGRES
  - *CORE-POSTGRES
  - *EMAIL-REDIS
  - *AUTH
  - *CORE
  - *EMAIL
  - *GENERATOR
  - *UNINSTALLER
  - *CLIENT

components: *DEV_COMPONENTS

ingress: *DEV_INGRESS
